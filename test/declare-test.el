(ert-deftest defmacro-test1 ()
  (let ((progn)
        (defmacro-exec)
        (+))
    (defmacro defmacro-exec (&rest body)
      (declare (indent defun))
      (progn body))
    (should (equal "test" (defmacro-exec progn "test"))))
    (should (equal 6 (defmacro-exec + 1 2 3))))

(ert-deftest defmacro-test2 ()
  (let ((count 0)
        (inc-macro))
    (defmacro inc-macro (var)
      (list 'setq var (list '1+ var)))
    (inc-macro count)
    (should (eq 1 count))
    (inc-macro count)
    (should (eq 2 count))))
